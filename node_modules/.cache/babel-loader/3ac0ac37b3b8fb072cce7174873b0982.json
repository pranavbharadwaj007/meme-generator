{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pranav\\\\Desktop\\\\react-dev4\\\\meme-gen-hostig\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pranav\\\\Desktop\\\\react-dev4\\\\meme-gen-hostig\\\\src\\\\Memegenerated\\\\MemeGenerated.js\";\nimport React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useClipboard } from \"use-clipboard-copy\";\nimport styles from \"./styles.module.css\";\nexport default function MemeGenerated() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var clipboard = useClipboard();\n  var history = useHistory();\n  var location = useLocation();\n  var url = new URLSearchParams(location.search).get(\"url\");\n\n  var copyLink = function copyLink() {\n    clipboard.copy(url);\n    setCopied(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return history.push(\"/\");\n    },\n    className: styles.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Make More Memes\"), url && /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"meme\",\n    src: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyLink,\n    className: styles.copy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, copied ? \"Link copied!\" : \"Copy link\"));\n}","map":{"version":3,"sources":["C:/Users/Pranav/Desktop/react-dev4/meme-gen-hostig/src/Memegenerated/MemeGenerated.js"],"names":["React","useState","useHistory","useLocation","useClipboard","styles","MemeGenerated","copied","setCopied","clipboard","history","location","url","URLSearchParams","search","get","copyLink","copy","container","push","home"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBACVL,QAAQ,CAAC,KAAD,CADE;AAAA;AAAA,MAC/BM,MAD+B;AAAA,MACvBC,SADuB;;AAEtC,MAAMC,SAAS,GAAGL,YAAY,EAA9B;AACA,MAAMM,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,GAAG,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,EAAqCC,GAArC,CAAyC,KAAzC,CAAZ;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBP,IAAAA,SAAS,CAACQ,IAAV,CAAeL,GAAf;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACa,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMR,OAAO,CAACS,IAAR,CAAa,GAAb,CAAN;AAAA,KAAjB;AAA0C,IAAA,SAAS,EAAEd,MAAM,CAACe,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIGR,GAAG,iBAAI;AAAK,IAAA,GAAG,EAAC,MAAT;AAAgB,IAAA,GAAG,EAAEA,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJV,eAKE;AAAQ,IAAA,OAAO,EAAEI,QAAjB;AAA2B,IAAA,SAAS,EAAEX,MAAM,CAACY,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,GAAG,cAAH,GAAoB,WAD7B,CALF,CADF;AAWD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\nimport styles from \"./styles.module.css\";\r\nexport default function MemeGenerated() {\r\n  const [copied, setCopied] = useState(false);\r\n  const clipboard = useClipboard();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const url = new URLSearchParams(location.search).get(\"url\");\r\n  const copyLink = () => {\r\n    clipboard.copy(url);\r\n    setCopied(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button onClick={() => history.push(\"/\")} className={styles.home}>\r\n        Make More Memes\r\n      </button>\r\n      {url && <img alt=\"meme\" src={url} />}\r\n      <button onClick={copyLink} className={styles.copy}>\r\n        {copied ? \"Link copied!\" : \"Copy link\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}