{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Pranav\\\\Desktop\\\\react-dev4\\\\meme-gen-hostig\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import styles from\"./styles.module.css\";import{useHistory}from\"react-router-dom\";export default function Meme(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),memes=_useState2[0],setMemes=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),memeindex=_useState4[0],setMemeIndex=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),captions=_useState6[0],setCaptions=_useState6[1];var history=useHistory();var updateCaption=function updateCaption(e,index){var text=e.target.value||\"\";setCaptions(captions.map(function(c,i){if(index===i){return text;}else{return c;}}));};var generateMeme=function generateMeme(){var currentMeme=memes[memeindex];var formData=new FormData();formData.append(\"username\",\"pranav777\");formData.append(\"password\",\"rickyman\");formData.append(\"template_id\",currentMeme.id);captions.forEach(function(c,index){return formData.append(\"boxes[\".concat(index,\"][text]\"),c);});fetch(\"https://api.imgflip.com/caption_image\",{method:\"POST\",body:formData}).then(function(res){res.json().then(function(res){//console.log(res);\nif(res.data!==undefined){history.push(\"/generated?url=\".concat(res.data.url));}});});};var shuffleMemes=function shuffleMemes(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*i);var temp=array[i];array[i]=array[j];array[j]=temp;}};//console.log(memeindex);\nuseEffect(function(){fetch(\"https://api.imgflip.com/get_memes\").then(function(res){res.json().then(function(res){var _memes=res.data.memes;shuffleMemes(_memes);setMemes(_memes);});});},[]);useEffect(function(){if(memes.length){setCaptions(Array(memes[memeindex].box_count).fill(\"\"));}},[memeindex,memes]);// useEffect(() => {\n//   console.log(captions);\n// }, [captions]);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:styles.container},memes.length?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){generateMeme();},className:styles.generate},\"Generate\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setMemeIndex(memeindex+1);},className:styles.skip},\"Skip\"),captions.map(function(c,index){return/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return updateCaption(e,index);},key:index});}),/*#__PURE__*/React.createElement(\"img\",{src:memes[memeindex].url,alt:memes[0].name})):/*#__PURE__*/React.createElement(\"img\",{src:\"https://acegif.com/wp-content/uploads/loading-38-gap.jpg\",alt:\"Loading\"}));}","map":{"version":3,"sources":["C:/Users/Pranav/Desktop/react-dev4/meme-gen-hostig/src/Meme/Meme.js"],"names":["React","useEffect","useState","styles","useHistory","Meme","memes","setMemes","memeindex","setMemeIndex","captions","setCaptions","history","updateCaption","e","index","text","target","value","map","c","i","generateMeme","currentMeme","formData","FormData","append","id","forEach","fetch","method","body","then","res","json","data","undefined","push","url","shuffleMemes","array","length","j","Math","floor","random","temp","_memes","Array","box_count","fill","container","generate","skip","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Meme() {\r\n  const [memes, setMemes] = useState([]);\r\n  const [memeindex, setMemeIndex] = useState(0);\r\n  const [captions, setCaptions] = useState([]);\r\n  const history = useHistory();\r\n  const updateCaption = (e, index) => {\r\n    const text = e.target.value || \"\";\r\n    setCaptions(\r\n      captions.map((c, i) => {\r\n        if (index === i) {\r\n          return text;\r\n        } else {\r\n          return c;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const generateMeme = () => {\r\n    const currentMeme = memes[memeindex];\r\n    const formData = new FormData();\r\n    formData.append(\"username\", \"pranav777\");\r\n    formData.append(\"password\", \"rickyman\");\r\n    formData.append(\"template_id\", currentMeme.id);\r\n    captions.forEach((c, index) => formData.append(`boxes[${index}][text]`, c));\r\n    fetch(\"https://api.imgflip.com/caption_image\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    }).then((res) => {\r\n      res.json().then((res) => {\r\n        //console.log(res);\r\n        if (res.data !== undefined) {\r\n          history.push(`/generated?url=${res.data.url}`);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const shuffleMemes = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  };\r\n  //console.log(memeindex);\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\").then((res) => {\r\n      res.json().then((res) => {\r\n        const _memes = res.data.memes;\r\n        shuffleMemes(_memes);\r\n        setMemes(_memes);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (memes.length) {\r\n      setCaptions(Array(memes[memeindex].box_count).fill(\"\"));\r\n    }\r\n  }, [memeindex, memes]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(captions);\r\n  // }, [captions]);\r\n  return (\r\n    <div className={styles.container}>\r\n      {memes.length ? (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              generateMeme();\r\n            }}\r\n            className={styles.generate}\r\n          >\r\n            Generate\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setMemeIndex(memeindex + 1);\r\n            }}\r\n            className={styles.skip}\r\n          >\r\n            Skip\r\n          </button>\r\n          {captions.map((c, index) => {\r\n            return (\r\n              <input onChange={(e) => updateCaption(e, index)} key={index} />\r\n            );\r\n          })}\r\n          <img src={memes[memeindex].url} alt={memes[0].name} />\r\n        </div>\r\n      ) : (\r\n        <img\r\n          src=\"https://acegif.com/wp-content/uploads/loading-38-gap.jpg\"\r\n          alt=\"Loading\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}